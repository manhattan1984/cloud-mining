// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: tDDRj6bhA72rUU2Wgcq2eA
// Component: MGvrXYhBYz

"use client";

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/navigation";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Date from "../../Date"; // plasmic-import: I3wTvliVyK/component
import TimelineItem from "../../TimelineItem"; // plasmic-import: ORhB_AY_QX/component

import { useScreenVariants as useScreenVariantsbRef4CkfFYuM } from "./PlasmicGlobalVariant__Desktop"; // plasmic-import: BRef4CKF-FYuM/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_wealth_aid.module.css"; // plasmic-import: tDDRj6bhA72rUU2Wgcq2eA/projectcss
import sty from "./PlasmicHistory.module.css"; // plasmic-import: MGvrXYhBYz/css

import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: SB_TvUnHA/icon

export type PlasmicHistory__VariantMembers = {};
export type PlasmicHistory__VariantsArgs = {};
type VariantPropType = keyof PlasmicHistory__VariantsArgs;
export const PlasmicHistory__VariantProps = new Array<VariantPropType>();

export type PlasmicHistory__ArgsType = {};
type ArgPropType = keyof PlasmicHistory__ArgsType;
export const PlasmicHistory__ArgProps = new Array<ArgPropType>();

export type PlasmicHistory__OverridesType = {
  root?: p.Flex<"div">;
  banner?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  text?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
};

export interface DefaultHistoryProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHistory__RenderFunc(props: {
  variants: PlasmicHistory__VariantsArgs;
  args: PlasmicHistory__ArgsType;
  overrides: PlasmicHistory__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    desktop: useScreenVariantsbRef4CkfFYuM()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"banner"}
        data-plasmic-override={overrides.banner}
        className={classNames(projectcss.all, sty.banner)}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"foreground2"}
          data-plasmic-override={overrides.foreground2}
          hasGap={true}
          className={classNames(projectcss.all, sty.foreground2)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bWZyt)}
          >
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"company history"}
            </h1>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              {
                "The Wealthaid Mining team has been involved in a mining business since 2014. We've been constantly exploring the crypto market, and we want to share our knowledge with you."
              }
            </div>
          </p.Stack>
        </p.Stack>
      </div>
      {true ? (
        <div className={classNames(projectcss.all, sty.freeBox___6Tifj)}>
          <div className={classNames(projectcss.all, sty.freeBox__tZlEd)}>
            <Icon17Icon
              data-plasmic-name={"svg"}
              data-plasmic-override={overrides.svg}
              className={classNames(projectcss.all, sty.svg)}
              role={"img"}
            />

            {true ? (
              <Date className={classNames("__wab_instance", sty.date__zIbY)} />
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__yWi3X
                )}
                slot={
                  "Founded in Seoul as a cryptocurrency mining company in South Korea by 3 crypto enthusiasts, including the CEO, Smith Young. Started with testimonial mining in South Korea with the first generation of ASIC miner."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__aTr5X)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/wealth_aid/images/hashcubeDoorjpeg.jpg",
                      fullWidth: 1094,
                      fullHeight: 414,
                      aspectRatio: undefined
                    }}
                  />
                }
              >
                {"2014 Q2 - Q4"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__xBm4V
                )}
                slot={
                  "Expanded mining with newer generations of miners, owning 0.1% total global Hashrate\nZipoaid Facility"
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__bzZ9X)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/wealth_aid/images/hashcubeFacility1135X518Jpeg.jpg",
                      fullWidth: 1130,
                      fullHeight: 289,
                      aspectRatio: undefined
                    }}
                  />
                }
              >
                {"2015-2016"}
              </TimelineItem>
            ) : null}
            {true ? (
              <Date className={classNames("__wab_instance", sty.date__uHuoB)}>
                {"Expansion Stage (2017-2018)"}
              </Date>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem___02Zec
                )}
                slot={
                  "China expansion plan executed with an investment of over 2 million USD."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gQHs9)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={
                      "https://hashmax.org/wp-content/uploads/2020/11/facility-scaled.jpg" as const
                    }
                  />
                }
              >
                {"2017 Q1- Q2"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__rsYjg
                )}
                slot={
                  "Further exploration of opportunities in the Pacific Asia region."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tXxGg)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={
                      "https://images.unsplash.com/photo-1542744173-8e7e53415bb0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80" as const
                    }
                  />
                }
              >
                {"2017 Q3 - 2018 Q3"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__kklpk
                )}
                slot={
                  "Launched the first platform that combines cloud mining and hosting service and named it Wealthaid Mining."
                }
                slot2={
                  true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__veGkU)}
                      displayHeight={"345px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null
                }
              >
                {"2018 Q4"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames("__wab_instance", sty.timelineItem__rRQw)}
                slot={
                  " Over 2000 miners for customers deployed in the wealthaid new facility."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vvYrs)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={
                      "https://hashmax.org/wp-content/uploads/2020/11/miner_2-scaled-1135x642.jpg" as const
                    }
                  />
                }
              >
                {"2019 Q1-Q3"}
              </TimelineItem>
            ) : null}
            {true ? (
              <Date className={classNames("__wab_instance", sty.date__bCdpM)}>
                {"Development Stage (2019-2020)"}
              </Date>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__kkOhH
                )}
                slot={
                  "A further contribution to the cryptocurrency community by holding the first Asia Crypto Investment Forum(ACIF) in Bangkok on 28th November 2019."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___5Vlbl)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={
                      "https://hashmax.org/wp-content/uploads/2020/12/ACIF-Image-scaled.jpg" as const
                    }
                  />
                }
              >
                {"2019 Q4"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem__wQpyg
                )}
                slot={
                  "Wealthaid was moved to Singapore and was developed into a one-click solution for easier access to mining."
                }
                slot2={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gnTiB)}
                    displayHeight={"345px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={
                      "https://hashmax.org/wp-content/uploads/2020/11/office-3-1135x729.jpg" as const
                    }
                  />
                }
              >
                {"2019 Q4 - 2020 Q1"}
              </TimelineItem>
            ) : null}
            {(
              hasVariant(globalVariants, "desktop", "mobileOnly") ? true : true
            ) ? (
              <TimelineItem
                className={classNames(
                  "__wab_instance",
                  sty.timelineItem___2ZuKf
                )}
                slot={
                  "Wealthaid saw the necessity to lower the investment risk and burden for customers as Halving happened and upgraded services by providing miner loan service."
                }
                slot2={
                  true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rwbzJ)}
                      displayHeight={"345px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                    />
                  ) : null
                }
              >
                {"2020 Q2 - Q3"}
              </TimelineItem>
            ) : null}
          </div>
        </div>
      ) : null}
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "banner", "foreground2", "h1", "text", "svg"],
  banner: ["banner", "foreground2", "h1", "text"],
  foreground2: ["foreground2", "h1", "text"],
  h1: ["h1"],
  text: ["text"],
  svg: ["svg"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  banner: "div";
  foreground2: "div";
  h1: "h1";
  text: "div";
  svg: "svg";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHistory__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHistory__VariantsArgs;
    args?: PlasmicHistory__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHistory__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHistory__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHistory__ArgProps,
          internalVariantPropNames: PlasmicHistory__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHistory__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHistory";
  } else {
    func.displayName = `PlasmicHistory.${nodeName}`;
  }
  return func;
}

export const PlasmicHistory = Object.assign(
  // Top-level PlasmicHistory renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    banner: makeNodeComponent("banner"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    text: makeNodeComponent("text"),
    svg: makeNodeComponent("svg"),

    // Metadata about props expected for PlasmicHistory
    internalVariantProps: PlasmicHistory__VariantProps,
    internalArgProps: PlasmicHistory__ArgProps
  }
);

export default PlasmicHistory;
/* prettier-ignore-end */
